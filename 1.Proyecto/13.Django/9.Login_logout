########################################################################################################
########################################################################################################
            Archivo views.py
* Importamos 'LoginView' de 'from django.contrib.auth.views', y creamos el método de logueo a la aplica
  ción de tareas.
* El método de Logueo utiliza todos los campos de la tabla User del aplicativo y lo activa el logueo
  mediante el atributo 'redirect_authenticated_user=True'. Cuando el logueo es satisfactorio, redirige
  a la página 'tareas'
########################################################################################################
########################################################################################################

from django.contrib.auth.views import LoginView

class Logueo(LoginView):
    template_name = "base/login.html"
    field='__all__'
    redirect_authenticated_user=True

    def get_success_url(self):
        return reverse_lazy('tareas')

########################################################################################################
########################################################################################################
            Archivo urls.py, Deslogueo del aplicativo
* Importamos 'LogoutView' de 'from django.contrib.auth.views' y creamos la ruta para desloguearse.
  LogoutView recibe como parametro 'next_page='login' que indica la ruta hacia donde debe dirigirse
  cuando se realiza el deslogueo.
########################################################################################################
########################################################################################################

from django.urls import path
from .views import ListaPendientes, DetalleTarea,CrearTarea, EditarTarea, EliminarTarea, Logueo
from django.contrib.auth.views import LogoutView

#from . import views
#urlpatterns=[path('',views.lista_pendientes,name='pendientes')]

urlpatterns=[
                path('',ListaPendientes.as_view(),name='tareas'),
                path('login/',Logueo.as_view(),name='login'),
                path('logout/',LogoutView.as_view(next_page='login'),name='logout'),
                path('tarea/<int:pk>',DetalleTarea.as_view(),name='tarea'),
                path('crear-tarea/',CrearTarea.as_view(),name='crear-tarea'),
                path('editar-tarea/<int:pk>',EditarTarea.as_view(),name='editar-tarea'),
                path('eliminar-tarea/<int:pk>',EliminarTarea.as_view(),name='eliminar-tarea'),
             ]


########################################################################################################
########################################################################################################
            Archivo logint.html, Vista de Logueo
* Creamos un formulario con todos los datos de la table User mediante form.as_p
########################################################################################################
########################################################################################################


<h1>Ingresar</h1>
<form method="POST">
    {% csrf_token %}
    {{form.as_p}}
    <input type="submit" value="Ingresar">
</form>


########################################################################################################
########################################################################################################
                        Archivo tarea_list.html
* Creamos la lógica de logueo mediante un condicional if else.
########################################################################################################
########################################################################################################



{% if request.user.is_authenticated %}
    <p>{{request.user}}</p>
    <a href="{% url 'logout' %}">Salir</a>
{% else %}
    <a href="{% url 'login' %}">Ingresar</a>
{% endif %}
<hr>

...
...
